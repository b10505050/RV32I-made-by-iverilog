$date
	Sat Sep 28 21:11:45 2024
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module ControlUnit_tb $end
$var wire 1 ! RegWrite $end
$var wire 1 " MemWrite $end
$var wire 1 # MemToReg $end
$var wire 1 $ MemRead $end
$var wire 1 % Jump $end
$var wire 1 & Branch $end
$var wire 1 ' ALUSrc $end
$var wire 2 ( ALUOp [1:0] $end
$var reg 3 ) funct3 [2:0] $end
$var reg 7 * funct7 [6:0] $end
$var reg 7 + opcode [6:0] $end
$scope module uut $end
$var wire 3 , funct3 [2:0] $end
$var wire 7 - funct7 [6:0] $end
$var wire 7 . opcode [6:0] $end
$var reg 2 / ALUOp [1:0] $end
$var reg 1 ' ALUSrc $end
$var reg 1 & Branch $end
$var reg 1 % Jump $end
$var reg 1 $ MemRead $end
$var reg 1 # MemToReg $end
$var reg 1 " MemWrite $end
$var reg 1 ! RegWrite $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
0'
0&
0%
0$
0#
0"
0!
$end
#100
b10 (
b10 /
1!
b110011 +
b110011 .
#200
1'
1#
1$
b0 (
b0 /
1!
b10 )
b10 ,
b11 +
b11 .
#300
1"
1'
0#
0$
0!
b100011 +
b100011 .
#400
b1 (
b1 /
1&
0'
0"
b0 )
b0 ,
b1100011 +
b1100011 .
#500
1%
1!
b0 (
b0 /
0&
b1101111 +
b1101111 .
#600
1'
1%
1!
b1100111 +
b1100111 .
#700
