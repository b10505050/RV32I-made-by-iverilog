$date
	Sat Oct  5 21:03:16 2024
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module ALU_tb $end
$var wire 1 ! Zero $end
$var wire 32 " Result [31:0] $end
$var wire 1 # Less $end
$var reg 32 $ A [31:0] $end
$var reg 2 % ALUOp [1:0] $end
$var reg 32 & B [31:0] $end
$var reg 3 ' funct3 [2:0] $end
$var reg 7 ( funct7 [6:0] $end
$var reg 5 ) shamt [4:0] $end
$scope module uut $end
$var wire 32 * A [31:0] $end
$var wire 2 + ALUOp [1:0] $end
$var wire 32 , B [31:0] $end
$var wire 3 - funct3 [2:0] $end
$var wire 7 . funct7 [6:0] $end
$var wire 5 / shamt [4:0] $end
$var wire 1 ! Zero $end
$var reg 1 # Less $end
$var reg 32 0 Result [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b11110 0
bx /
b0 .
bx -
b10100 ,
b0 +
b1010 *
bx )
b0 (
bx '
b10100 &
b0 %
b1010 $
1#
b11110 "
0!
$end
#100
b1010 "
b1010 0
0#
b100000 (
b100000 .
b1010 &
b1010 ,
b10100 $
b10100 *
#200
b11110000000000001111 "
b11110000000000001111 0
b0 '
b0 -
b1 %
b1 +
b111111110000000011111111 &
b111111110000000011111111 ,
b1111000011110000111100001111 $
b1111000011110000111100001111 *
#300
b1111111111110000111111111111 "
b1111111111110000111111111111 0
b1 '
b1 -
#400
b1111111100000000111111110000 "
b1111111100000000111111110000 0
b10 '
b10 -
#500
b100000 "
b100000 0
1#
b0 '
b0 -
b10 %
b10 +
b101 )
b101 /
b1 $
b1 *
#600
b1000 "
b1000 0
b0 (
b0 .
b101 '
b101 -
b10 )
b10 /
b100000 $
b100000 *
#700
b11111111111111111111111111111000 "
b11111111111111111111111111111000 0
b100000 (
b100000 .
b11111111111111111111111111100000 $
b11111111111111111111111111100000 *
#800
b1 "
b1 0
b10 '
b10 -
b11 %
b11 +
b10 &
b10 ,
b1 $
b1 *
#900
1!
b0 "
b0 0
b11 '
b11 -
b1 &
b1 ,
b11111111111111111111111111111110 $
b11111111111111111111111111111110 *
#1000
0#
b0 (
b0 .
b0 %
b0 +
b0 &
b0 ,
b0 $
b0 *
#1100
