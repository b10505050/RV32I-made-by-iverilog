$date
	Sat Oct  5 21:21:35 2024
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module CPU_tb $end
$var wire 2 ! ALUOp [1:0] $end
$var wire 1 " ALUSrc $end
$var wire 1 # Branch $end
$var wire 1 $ Jump $end
$var wire 1 % MemRead $end
$var wire 1 & MemToReg $end
$var wire 1 ' MemWrite $end
$var wire 1 ( RegWrite $end
$var wire 32 ) alu_result [31:0] $end
$var wire 32 * busA [31:0] $end
$var wire 32 + busB [31:0] $end
$var wire 3 , funct3 [2:0] $end
$var wire 7 - funct7 [6:0] $end
$var wire 32 . imm [31:0] $end
$var wire 32 / instr [31:0] $end
$var wire 7 0 opcode [6:0] $end
$var wire 32 1 pc [31:0] $end
$var wire 5 2 rd [4:0] $end
$var wire 5 3 rs1 [4:0] $end
$var wire 5 4 rs2 [4:0] $end
$var wire 5 5 shamt [4:0] $end
$var reg 1 6 clk $end
$var reg 1 7 reset $end
$scope module cpu $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 5 8 shamt [4:0] $end
$var wire 5 9 rs2 [4:0] $end
$var wire 5 : rs1 [4:0] $end
$var wire 5 ; rd [4:0] $end
$var wire 32 < pc [31:0] $end
$var wire 7 = opcode [6:0] $end
$var wire 32 > next_pc [31:0] $end
$var wire 32 ? instr [31:0] $end
$var wire 32 @ imm [31:0] $end
$var wire 7 A funct7 [6:0] $end
$var wire 3 B funct3 [2:0] $end
$var wire 32 C busB [31:0] $end
$var wire 32 D busA [31:0] $end
$var wire 32 E alu_result [31:0] $end
$var wire 1 F Zero $end
$var wire 1 G RegWrite $end
$var wire 1 H MemWrite $end
$var wire 1 I MemToReg $end
$var wire 1 J MemRead $end
$var wire 1 K Less $end
$var wire 1 L Jump $end
$var wire 1 M Branch $end
$var wire 1 N ALUSrc $end
$var wire 2 O ALUOp [1:0] $end
$scope module alu $end
$var wire 32 P B [31:0] $end
$var wire 5 Q shamt [4:0] $end
$var wire 7 R funct7 [6:0] $end
$var wire 3 S funct3 [2:0] $end
$var wire 1 F Zero $end
$var wire 2 T ALUOp [1:0] $end
$var wire 32 U A [31:0] $end
$var reg 1 K Less $end
$var reg 32 V Result [31:0] $end
$upscope $end
$scope module decoder $end
$var wire 32 W instr [31:0] $end
$var reg 2 X ALUOp [1:0] $end
$var reg 1 N ALUSrc $end
$var reg 1 M Branch $end
$var reg 1 L Jump $end
$var reg 1 J MemRead $end
$var reg 1 I MemToReg $end
$var reg 1 H MemWrite $end
$var reg 1 G RegWrite $end
$var reg 3 Y funct3 [2:0] $end
$var reg 7 Z funct7 [6:0] $end
$var reg 32 [ imm [31:0] $end
$var reg 7 \ opcode [6:0] $end
$var reg 5 ] rd [4:0] $end
$var reg 5 ^ rs1 [4:0] $end
$var reg 5 _ rs2 [4:0] $end
$var reg 5 ` shamt [4:0] $end
$upscope $end
$scope module instr_mem $end
$var wire 32 a addr [31:0] $end
$var reg 32 b instr [31:0] $end
$upscope $end
$scope module pc_reg $end
$var wire 1 6 clk $end
$var wire 32 c next_pc [31:0] $end
$var wire 1 7 reset $end
$var reg 32 d pc [31:0] $end
$upscope $end
$scope module reg_file $end
$var wire 5 e Ra [4:0] $end
$var wire 5 f Rb [4:0] $end
$var wire 1 G RegWr $end
$var wire 5 g Rw [4:0] $end
$var wire 1 6 WrClk $end
$var wire 32 h busW [31:0] $end
$var wire 32 i reg1 [31:0] $end
$var wire 32 j reg2 [31:0] $end
$var wire 32 k busB [31:0] $end
$var wire 32 l busA [31:0] $end
$var integer 32 m i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100000 m
b0 l
b0 k
b0 j
b0 i
b0 h
b1 g
b11 f
b10 e
b0 d
b100 c
b1100010000000010110011 b
b0 a
b11 `
b11 _
b10 ^
b1 ]
b110011 \
b0 [
b0 Z
b0 Y
b0 X
b1100010000000010110011 W
b0 V
b0 U
b0 T
b0 S
b0 R
b11 Q
b0 P
b0 O
0N
0M
0L
0K
0J
0I
0H
1G
1F
b0 E
b0 D
b0 C
b0 B
b0 A
b0 @
b1100010000000010110011 ?
b100 >
b110011 =
b0 <
b1 ;
b10 :
b11 9
b11 8
17
16
b11 5
b11 4
b10 3
b1 2
b0 1
b110011 0
b1100010000000010110011 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
1(
0'
0&
0%
0$
0#
0"
b0 !
$end
#10
1K
b10100 P
0F
b11110 )
b11110 E
b11110 V
b11110 h
b10100 +
b10100 C
b10100 k
b1010 *
b1010 D
b1010 U
b1010 l
b1010 j
07
#50
b11110 i
06
#100
b11111111111111111111111111110110 )
b11111111111111111111111111110110 E
b11111111111111111111111111110110 V
b11111111111111111111111111110110 h
1(
1G
b100000 -
b100000 A
b100000 R
b100000 Z
b1000000001100010000000010110011 /
b1000000001100010000000010110011 ?
b1000000001100010000000010110011 W
b1000000001100010000000010110011 b
b1000 >
b1000 c
b100 1
b100 <
b100 a
b100 d
16
#150
b11111111111111111111111111110110 i
06
#200
b11110 )
b11110 E
b11110 V
b11110 h
1(
1G
b0 -
b0 A
b0 R
b0 Z
b100 ,
b100 B
b100 S
b100 Y
b1100010100000010110011 /
b1100010100000010110011 ?
b1100010100000010110011 W
b1100010100000010110011 b
b1100 >
b1100 c
b1000 1
b1000 <
b1000 a
b1000 d
16
#250
b11110 i
06
#300
1(
1G
b110 ,
b110 B
b110 S
b110 Y
b1100010110000010110011 /
b1100010110000010110011 ?
b1100010110000010110011 W
b1100010110000010110011 b
b10000 >
b10000 c
b1100 1
b1100 <
b1100 a
b1100 d
16
#350
06
#400
1F
b0 )
b0 E
b0 V
b0 h
1(
1G
b111 ,
b111 B
b111 S
b111 Y
b1100010111000010110011 /
b1100010111000010110011 ?
b1100010111000010110011 W
b1100010111000010110011 b
b10100 >
b10100 c
b10000 1
b10000 <
b10000 a
b10000 d
16
#450
b0 i
06
#500
1(
1G
b1 ,
b1 B
b1 S
b1 Y
b1100010001000010110011 /
b1100010001000010110011 ?
b1100010001000010110011 W
b1100010001000010110011 b
b11000 >
b11000 c
b10100 1
b10100 <
b10100 a
b10100 d
16
#550
06
#600
1(
1G
b101 ,
b101 B
b101 S
b101 Y
b1100010101000010110011 /
b1100010101000010110011 ?
b1100010101000010110011 W
b1100010101000010110011 b
b11100 >
b11100 c
b11000 1
b11000 <
b11000 a
b11000 d
16
#650
06
#700
1(
1G
b100000 -
b100000 A
b100000 R
b100000 Z
b1000000001100010101000010110011 /
b1000000001100010101000010110011 ?
b1000000001100010101000010110011 W
b1000000001100010101000010110011 b
b100000 >
b100000 c
b11100 1
b11100 <
b11100 a
b11100 d
16
#750
06
#800
1(
1G
b0 -
b0 A
b0 R
b0 Z
b10 ,
b10 B
b10 S
b10 Y
b1100010010000010110011 /
b1100010010000010110011 ?
b1100010010000010110011 W
b1100010010000010110011 b
b100100 >
b100100 c
b100000 1
b100000 <
b100000 a
b100000 d
16
#850
06
#900
1(
1G
b11 ,
b11 B
b11 S
b11 Y
b1100010011000010110011 /
b1100010011000010110011 ?
b1100010011000010110011 W
b1100010011000010110011 b
b101000 >
b101000 c
b100100 1
b100100 <
b100100 a
b100100 d
16
#950
06
#1000
0K
b1 P
b0 +
b0 C
b0 k
0F
b1011 )
b1011 E
b1011 V
b1011 h
b1 .
b1 @
b1 [
1"
1N
1(
1G
b1 5
b1 8
b1 Q
b1 `
b1 4
b1 9
b1 _
b1 f
b0 ,
b0 B
b0 S
b0 Y
b10011 0
b10011 =
b10011 \
b100010000000010010011 /
b100010000000010010011 ?
b100010000000010010011 W
b100010000000010010011 b
b101100 >
b101100 c
b101000 1
b101000 <
b101000 a
b101000 d
16
#1050
b1011 +
b1011 C
b1011 k
b1011 i
06
#1100
1"
1N
1(
1G
b1 .
b1 @
b1 [
b100 ,
b100 B
b100 S
b100 Y
b100010100000010010011 /
b100010100000010010011 ?
b100010100000010010011 W
b100010100000010010011 b
b110000 >
b110000 c
b101100 1
b101100 <
b101100 a
b101100 d
16
#1150
06
#1200
1"
1N
1(
1G
b1 .
b1 @
b1 [
b110 ,
b110 B
b110 S
b110 Y
b100010110000010010011 /
b100010110000010010011 ?
b100010110000010010011 W
b100010110000010010011 b
b110100 >
b110100 c
b110000 1
b110000 <
b110000 a
b110000 d
16
#1250
06
#1300
1F
b0 )
b0 E
b0 V
b0 h
1"
1N
1(
1G
b1 .
b1 @
b1 [
b111 ,
b111 B
b111 S
b111 Y
b100010111000010010011 /
b100010111000010010011 ?
b100010111000010010011 W
b100010111000010010011 b
b111000 >
b111000 c
b110100 1
b110100 <
b110100 a
b110100 d
16
#1350
b0 +
b0 C
b0 k
b0 i
06
#1400
0F
b10100 )
b10100 E
b10100 V
b10100 h
b1 !
b1 O
b1 T
b1 X
1"
1N
1(
1G
b1 .
b1 @
b1 [
b1 ,
b1 B
b1 S
b1 Y
b100010001000010010011 /
b100010001000010010011 ?
b100010001000010010011 W
b100010001000010010011 b
b111100 >
b111100 c
b111000 1
b111000 <
b111000 a
b111000 d
16
#1450
b10100 +
b10100 C
b10100 k
b10100 i
06
#1500
b101 )
b101 E
b101 V
b101 h
b1 !
b1 O
b1 T
b1 X
1"
1N
1(
1G
b1 .
b1 @
b1 [
b101 ,
b101 B
b101 S
b101 Y
b100010101000010010011 /
b100010101000010010011 ?
b100010101000010010011 W
b100010101000010010011 b
b1000000 >
b1000000 c
b111100 1
b111100 <
b111100 a
b111100 d
16
#1550
b101 +
b101 C
b101 k
b101 i
06
#1600
1K
b10000000001 P
b1 !
b1 O
b1 T
b1 X
1"
1N
1(
1G
b10000000001 .
b10000000001 @
b10000000001 [
b100000 -
b100000 A
b100000 R
b100000 Z
b1000000000100010101000010010011 /
b1000000000100010101000010010011 ?
b1000000000100010101000010010011 W
b1000000000100010101000010010011 b
b1000100 >
b1000100 c
b1000000 1
b1000000 <
b1000000 a
b1000000 d
16
#1650
06
#1700
0K
b1 P
1F
b0 )
b0 E
b0 V
b0 h
b0 !
b0 O
b0 T
b0 X
1"
1N
1(
1G
b1 .
b1 @
b1 [
b0 -
b0 A
b0 R
b0 Z
b10 ,
b10 B
b10 S
b10 Y
b100010010000010010011 /
b100010010000010010011 ?
b100010010000010010011 W
b100010010000010010011 b
b1001000 >
b1001000 c
b1000100 1
b1000100 <
b1000100 a
b1000100 d
16
#1750
b0 +
b0 C
b0 k
b0 i
06
#1800
1"
1N
1(
1G
b1 .
b1 @
b1 [
b11 ,
b11 B
b11 S
b11 Y
b100010011000010010011 /
b100010011000010010011 ?
b100010011000010010011 W
b100010011000010010011 b
b1001100 >
b1001100 c
b1001000 1
b1001000 <
b1001000 a
b1001000 d
16
#1850
06
#1900
b0 P
0F
b1010 )
b1010 E
b1010 V
b1010 h
b0 5
b0 8
b0 Q
b0 `
0"
0N
0(
0G
b0 .
b0 @
b0 [
b0 ,
b0 B
b0 S
b0 Y
b110111 0
b110111 =
b110111 \
b100010000000010110111 /
b100010000000010110111 ?
b100010000000010110111 W
b100010000000010110111 b
b1010000 >
b1010000 c
b1001100 1
b1001100 <
b1001100 a
b1001100 d
16
#1950
06
#2000
b0 5
b0 8
b0 Q
b0 `
b100 ,
b100 B
b100 S
b100 Y
b10111 0
b10111 =
b10111 \
b100010100000010010111 /
b100010100000010010111 ?
b100010100000010010111 W
b100010100000010010111 b
b1010100 >
b1010100 c
b1010000 1
b1010000 <
b1010000 a
b1010000 d
16
#2010
